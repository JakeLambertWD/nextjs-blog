{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jakelambert/Downloads/nextjs-full-blog/components/posts/post-detail/post-content.js\",\n    _this = this;\n\nimport ReactMarkdown from 'react-markdown';\nimport PostHeader from './post-header';\nimport classes from './post-content.module.css';\nimport Image from 'next/image';\n\nvar PostContent = function PostContent(props) {\n  var post = props.post;\n  var imagePath = \"/images/posts/\".concat(post.slug, \"/\").concat(post.image); // const customRenderers = {\n  // \t// takes a HTML img element and converts to a Next Image\n  // \timage(image) {\n  // \t\treturn <Image src={`/images/posts/${post.slug}/${image.url}`} alt={image.alt} width={600} height={300} />;\n  // \t}\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(PostHeader, {\n      title: post.title,\n      image: imagePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = PostContent;\nexport default PostContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"sources":["/Users/jakelambert/Downloads/nextjs-full-blog/components/posts/post-detail/post-content.js"],"names":["ReactMarkdown","PostHeader","classes","Image","PostContent","props","post","imagePath","slug","image","content","title"],"mappings":";;;;;AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,MACpBC,IADoB,GACXD,KADW,CACpBC,IADoB;AAG5B,MAAMC,SAAS,2BAAoBD,IAAI,CAACE,IAAzB,cAAiCF,IAAI,CAACG,KAAtC,CAAf,CAH4B,CAK5B;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACC;AAAS,IAAA,SAAS,EAAEP,OAAO,CAACQ,OAA5B;AAAA,4BACC,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEJ,IAAI,CAACK,KAAxB;AAA+B,MAAA,KAAK,EAAEJ;AAAtC;AAAA;AAAA;AAAA;AAAA,aADD,eAIC,QAAC,aAAD;AAAA,gBAAgBD,IAAI,CAACI;AAArB;AAAA;AAAA;AAAA;AAAA,aAJD;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAQA,CApBD;;KAAMN,W;AAsBN,eAAeA,WAAf","sourcesContent":["import ReactMarkdown from 'react-markdown';\nimport PostHeader from './post-header';\nimport classes from './post-content.module.css';\nimport Image from 'next/image';\n\nconst PostContent = props => {\n\tconst { post } = props;\n\n\tconst imagePath = `/images/posts/${post.slug}/${post.image}`;\n\n\t// const customRenderers = {\n\t// \t// takes a HTML img element and converts to a Next Image\n\t// \timage(image) {\n\t// \t\treturn <Image src={`/images/posts/${post.slug}/${image.url}`} alt={image.alt} width={600} height={300} />;\n\t// \t}\n\t// };\n\n\treturn (\n\t\t<article className={classes.content}>\n\t\t\t<PostHeader title={post.title} image={imagePath} />\n\t\t\t{/* markdown to JSX translation */}\n\t\t\t{/* to overwrite how certain elements are rendered, we use the renderers prop */}\n\t\t\t<ReactMarkdown>{post.content}</ReactMarkdown>\n\t\t</article>\n\t);\n};\n\nexport default PostContent;\n"]},"metadata":{},"sourceType":"module"}