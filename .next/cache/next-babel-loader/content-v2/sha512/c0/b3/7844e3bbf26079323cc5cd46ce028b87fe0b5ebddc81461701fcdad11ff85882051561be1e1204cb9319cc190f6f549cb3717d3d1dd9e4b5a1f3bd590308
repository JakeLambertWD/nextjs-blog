{"ast":null,"code":"function handler(req, res) {\n  if (req.method == 'POST') {\n    const {\n      email,\n      name,\n      message\n    } = req.body;\n\n    if (!email || !email.includes('@') || !name || !name.trim() === '' || !message || !message.trim() === ' ') {\n      res.status(442).json({\n        message: 'Invlaid input'\n      });\n      return;\n    } // store in a database\n\n\n    const newMessage = {\n      email,\n      name,\n      message\n    };\n    console.log(newMessage);\n    res.status(201).json({\n      message: 'Success',\n      message: newMessage\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/jakelambert/Downloads/nextjs-full-blog/pages/api/contact.js"],"names":["handler","req","res","method","email","name","message","body","includes","trim","status","json","newMessage","console","log"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AAC1B,MAAID,GAAG,CAACE,MAAJ,IAAc,MAAlB,EAA0B;AACzB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAA2BL,GAAG,CAACM,IAArC;;AAEA,QAAI,CAACH,KAAD,IAAU,CAACA,KAAK,CAACI,QAAN,CAAe,GAAf,CAAX,IAAkC,CAACH,IAAnC,IAA2C,CAACA,IAAI,CAACI,IAAL,EAAD,KAAiB,EAA5D,IAAkE,CAACH,OAAnE,IAA8E,CAACA,OAAO,CAACG,IAAR,EAAD,KAAoB,GAAtG,EAA2G;AAC1GP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEL,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACA,KANwB,CAQzB;;;AACA,UAAMM,UAAU,GAAG;AAClBR,MAAAA,KADkB;AAElBC,MAAAA,IAFkB;AAGlBC,MAAAA;AAHkB,KAAnB;AAMAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAEAV,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEL,MAAAA,OAAO,EAAE,SAAX;AAAsBA,MAAAA,OAAO,EAAEM;AAA/B,KAArB;AACA;AACD;;AAED,eAAeZ,OAAf","sourcesContent":["function handler(req, res) {\n\tif (req.method == 'POST') {\n\t\tconst { email, name, message } = req.body;\n\n\t\tif (!email || !email.includes('@') || !name || !name.trim() === '' || !message || !message.trim() === ' ') {\n\t\t\tres.status(442).json({ message: 'Invlaid input' });\n\t\t\treturn;\n\t\t}\n\n\t\t// store in a database\n\t\tconst newMessage = {\n\t\t\temail,\n\t\t\tname,\n\t\t\tmessage\n\t\t};\n\n\t\tconsole.log(newMessage);\n\n\t\tres.status(201).json({ message: 'Success', message: newMessage });\n\t}\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}