{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jakelambert/Downloads/nextjs-full-blog/components/contact/contact-form.js\";\nimport { useState } from 'react';\nimport Notification from '../ui/notification';\nimport classes from './contact-form.module.css';\n\nasync function sendContactData(contactDetails) {\n  // communicate with our API route\n  const response = await fetch('/api/contact', {\n    method: 'POST',\n    body: JSON.stringify(contactDetails),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Something went wrong');\n  }\n}\n\nconst ContactForm = () => {\n  const {\n    0: enteredEmail,\n    1: setEnteredEmail\n  } = useState('');\n  const {\n    0: enteredName,\n    1: setEnteredName\n  } = useState('');\n  const {\n    0: enteredMessage,\n    1: setEnteredMessage\n  } = useState('');\n  const {\n    0: requestStatus,\n    1: setRequestStatus\n  } = useState();\n  const {\n    0: requestError,\n    1: setRequestError\n  } = useState();\n  useEffect(() => {\n    if (requestStatus === 'success' || requestStatus === 'error') {\n      const timer = setTimeout(() => {\n        setRequestStatus(null);\n        setRequestError(null);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [requestStatus]);\n\n  async function sendMessageHandler(event) {\n    event.preventDefault();\n    setRequestStatus('pending');\n\n    try {\n      await sendContactData({\n        email: enteredEmail,\n        name: enteredName,\n        message: enteredMessage\n      });\n      setRequestStatus('success');\n    } catch (err) {\n      setRequestError(error.message);\n      setRequestStatus('error');\n    }\n  }\n\n  let notification;\n\n  if (requestStatus === 'pending') {\n    notification = {\n      status: 'pending',\n      title: 'Sedning message..',\n      message: 'Your message is on its way'\n    };\n  }\n\n  if (requestStatus === 'success') {\n    notification = {\n      status: 'success',\n      title: 'Success!',\n      message: 'Message sent successfully'\n    };\n  }\n\n  if (requestStatus === 'error') {\n    notification = {\n      status: 'error',\n      title: 'Error!',\n      message: requestError\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How can I help you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            value: enteredEmail,\n            onChange: event => setEnteredEmail(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            required: true,\n            value: enteredName,\n            onChange: event => setEnteredName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Your Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          rows: \"5\",\n          required: true,\n          value: enteredMessage,\n          onChange: event => setEnteredMessage(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/jakelambert/Downloads/nextjs-full-blog/components/contact/contact-form.js"],"names":["useState","Notification","classes","sendContactData","contactDetails","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","ContactForm","enteredEmail","setEnteredEmail","enteredName","setEnteredName","enteredMessage","setEnteredMessage","requestStatus","setRequestStatus","requestError","setRequestError","useEffect","timer","setTimeout","clearTimeout","sendMessageHandler","event","preventDefault","email","name","err","error","notification","status","title","contact","form","controls","control","target","value","actions"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Notification from '../ui/notification';\nimport classes from './contact-form.module.css';\n\nasync function sendContactData(contactDetails) {\n\t// communicate with our API route\n\tconst response = await fetch('/api/contact', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(contactDetails),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t});\n\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Something went wrong');\n\t}\n}\n\nconst ContactForm = () => {\n\tconst [enteredEmail, setEnteredEmail] = useState('');\n\tconst [enteredName, setEnteredName] = useState('');\n\tconst [enteredMessage, setEnteredMessage] = useState('');\n\n\tconst [requestStatus, setRequestStatus] = useState();\n\tconst [requestError, setRequestError] = useState();\n\n\tuseEffect(() => {\n\t\tif (requestStatus === 'success' || requestStatus === 'error') {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\tsetRequestStatus(null);\n\t\t\t\tsetRequestError(null);\n\t\t\t}, 3000);\n\n\t\t\treturn () => clearTimeout(timer);\n\t\t}\n\t}, [requestStatus]);\n\n\tasync function sendMessageHandler(event) {\n\t\tevent.preventDefault();\n\n\t\tsetRequestStatus('pending');\n\n\t\ttry {\n\t\t\tawait sendContactData({\n\t\t\t\temail: enteredEmail,\n\t\t\t\tname: enteredName,\n\t\t\t\tmessage: enteredMessage\n\t\t\t});\n\n\t\t\tsetRequestStatus('success');\n\t\t} catch (err) {\n\t\t\tsetRequestError(error.message);\n\t\t\tsetRequestStatus('error');\n\t\t}\n\t}\n\n\tlet notification;\n\n\tif (requestStatus === 'pending') {\n\t\tnotification = {\n\t\t\tstatus: 'pending',\n\t\t\ttitle: 'Sedning message..',\n\t\t\tmessage: 'Your message is on its way'\n\t\t};\n\t}\n\n\tif (requestStatus === 'success') {\n\t\tnotification = {\n\t\t\tstatus: 'success',\n\t\t\ttitle: 'Success!',\n\t\t\tmessage: 'Message sent successfully'\n\t\t};\n\t}\n\n\tif (requestStatus === 'error') {\n\t\tnotification = {\n\t\t\tstatus: 'error',\n\t\t\ttitle: 'Error!',\n\t\t\tmessage: requestError\n\t\t};\n\t}\n\n\treturn (\n\t\t<section className={classes.contact}>\n\t\t\t<h1>How can I help you?</h1>\n\n\t\t\t{/* FORM */}\n\t\t\t<form className={classes.form} onSubmit={sendMessageHandler}>\n\t\t\t\t<div className={classes.controls}>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='email'>Your Email</label>\n\t\t\t\t\t\t<input type='email' id='email' required value={enteredEmail} onChange={event => setEnteredEmail(event.target.value)} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='name'>Your Name</label>\n\t\t\t\t\t\t<input type='text' id='name' required value={enteredName} onChange={event => setEnteredName(event.target.value)} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor='message'>Your Message</label>\n\t\t\t\t\t<textarea id='message' rows='5' required value={enteredMessage} onChange={event => setEnteredMessage(event.target.value)}></textarea>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t<button>Send Message</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{notification && <Notification status={notification.status} title={notification.title} message={notification.message} />}\n\t\t</section>\n\t);\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}