{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport ReactMarkdown from 'react-markdown';\nimport PostHeader from './post-header';\nimport classes from './post-content.module.css';\nimport Image from 'next/image';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport atomDark from 'react-syntax-highlighter/dist/cjs/styles/prism/atom-dark';\nimport js from 'react-syntax-highlighter/dist/cjs/languages/prism/javascript';\nimport css from 'react-syntax-highlighter/dist/cjs/languages/prism/css';\nSyntaxHighlighter.registerLanguage('js', js);\nSyntaxHighlighter.registerLanguage('css', css);\n\nconst PostContent = props => {\n  const {\n    post\n  } = props;\n  const imagePath = `/images/posts/${post.slug}/${post.image}`; // custom renderers for Markdown\n\n  const customRenderers = {\n    // NOT WORKING\n    paragraph(paragraph) {\n      const {\n        node\n      } = paragraph; // takes a HTML img element and converts to a Next Image\n\n      if (node.children[0].type === 'image') {\n        const image = node.children[0];\n        return /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.image,\n          children: [/*#__PURE__*/_jsx(Image, {\n            src: `/images/posts/${post.slug}/${image.url}`,\n            alt: image.alt,\n            width: 600,\n            height: 300\n          }), \";\"]\n        });\n      }\n\n      return /*#__PURE__*/_jsx(\"p\", {\n        children: paragraph.children\n      });\n    },\n\n    // NOT WORKING\n    code(code) {\n      const {\n        language,\n        value\n      } = code;\n      return /*#__PURE__*/_jsx(SyntaxHighlighter, {\n        style: atomDark,\n        language: language,\n        children: value\n      });\n    }\n\n  };\n  return /*#__PURE__*/_jsxs(\"article\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsx(PostHeader, {\n      title: post.title,\n      image: imagePath\n    }), /*#__PURE__*/_jsx(ReactMarkdown, {\n      renderers: customRenderers,\n      children: post.content\n    })]\n  });\n};\n\nexport default PostContent;","map":null,"metadata":{},"sourceType":"module"}