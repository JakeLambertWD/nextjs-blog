{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n  if (req.method == 'POST') {\n    const {\n      email,\n      name,\n      message\n    } = req.body; // store in a database\n\n    const newMessage = {\n      email,\n      name,\n      message\n    }; // mongodb\n\n    let client; // connect to environment variables\n    // now you can access 'process.env.customKey' in your code\n\n    const connectionString = `mongodb+srv://${process.env.mongodb_username}:${process.env.mongodb_password}@${process.env.mongodb_clustername}.fwhyj.mongodb.net/${process.env.mongodb_database}?retryWrites=true&w=majority`;\n\n    try {\n      client = await MongoClient.connect('mongodb+srv://next-blog:euGcIa6KjnfxUAus@cluster0.fwhyj.mongodb.net/my-site?retryWrites=true&w=majority');\n    } catch (err) {\n      res.status(500).json({\n        message: 'Could not connect  to db'\n      });\n      return;\n    }\n\n    const db = client.db();\n\n    try {\n      const result = await db.collection('messages').insertOne(newMessage); // manually add the auto generated id from mongodb\n\n      newMessage.id = result.insertedId;\n    } catch (err) {\n      client.close();\n      res.status(500).json({\n        message: 'Storing msg failed'\n      });\n      return;\n    }\n\n    client.close();\n    res.status(201).json({\n      message: 'Success',\n      message: newMessage\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/jakelambert/Downloads/nextjs-full-blog/pages/api/contact.js"],"names":["MongoClient","handler","req","res","method","email","name","message","body","newMessage","client","connectionString","process","env","mongodb_username","mongodb_password","mongodb_clustername","mongodb_database","connect","err","status","json","db","result","collection","insertOne","id","insertedId","close"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAChC,MAAID,GAAG,CAACE,MAAJ,IAAc,MAAlB,EAA0B;AACzB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAA2BL,GAAG,CAACM,IAArC,CADyB,CAGzB;;AACA,UAAMC,UAAU,GAAG;AAClBJ,MAAAA,KADkB;AAElBC,MAAAA,IAFkB;AAGlBC,MAAAA;AAHkB,KAAnB,CAJyB,CAUzB;;AACA,QAAIG,MAAJ,CAXyB,CAazB;AACA;;AACA,UAAMC,gBAAgB,GAAI,iBAAgBC,OAAO,CAACC,GAAR,CAAYC,gBAAiB,IAAGF,OAAO,CAACC,GAAR,CAAYE,gBAAiB,IAAGH,OAAO,CAACC,GAAR,CAAYG,mBAAoB,sBAAqBJ,OAAO,CAACC,GAAR,CAAYI,gBAAiB,8BAA5L;;AAEA,QAAI;AACHP,MAAAA,MAAM,GAAG,MAAMV,WAAW,CAACkB,OAAZ,CAAoB,yGAApB,CAAf;AACA,KAFD,CAEE,OAAOC,GAAP,EAAY;AACbhB,MAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEd,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACA;;AAED,UAAMe,EAAE,GAAGZ,MAAM,CAACY,EAAP,EAAX;;AAEA,QAAI;AACH,YAAMC,MAAM,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BC,SAA1B,CAAoChB,UAApC,CAArB,CADG,CAGH;;AACAA,MAAAA,UAAU,CAACiB,EAAX,GAAgBH,MAAM,CAACI,UAAvB;AACA,KALD,CAKE,OAAOR,GAAP,EAAY;AACbT,MAAAA,MAAM,CAACkB,KAAP;AACAzB,MAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEd,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACA;;AAEDG,IAAAA,MAAM,CAACkB,KAAP;AAEAzB,IAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEd,MAAAA,OAAO,EAAE,SAAX;AAAsBA,MAAAA,OAAO,EAAEE;AAA/B,KAArB;AACA;AACD;;AAED,eAAeR,OAAf","sourcesContent":["import { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n\tif (req.method == 'POST') {\n\t\tconst { email, name, message } = req.body;\n\n\t\t// store in a database\n\t\tconst newMessage = {\n\t\t\temail,\n\t\t\tname,\n\t\t\tmessage\n\t\t};\n\n\t\t// mongodb\n\t\tlet client;\n\n\t\t// connect to environment variables\n\t\t// now you can access 'process.env.customKey' in your code\n\t\tconst connectionString = `mongodb+srv://${process.env.mongodb_username}:${process.env.mongodb_password}@${process.env.mongodb_clustername}.fwhyj.mongodb.net/${process.env.mongodb_database}?retryWrites=true&w=majority`;\n\n\t\ttry {\n\t\t\tclient = await MongoClient.connect('mongodb+srv://next-blog:euGcIa6KjnfxUAus@cluster0.fwhyj.mongodb.net/my-site?retryWrites=true&w=majority');\n\t\t} catch (err) {\n\t\t\tres.status(500).json({ message: 'Could not connect  to db' });\n\t\t\treturn;\n\t\t}\n\n\t\tconst db = client.db();\n\n\t\ttry {\n\t\t\tconst result = await db.collection('messages').insertOne(newMessage);\n\n\t\t\t// manually add the auto generated id from mongodb\n\t\t\tnewMessage.id = result.insertedId;\n\t\t} catch (err) {\n\t\t\tclient.close();\n\t\t\tres.status(500).json({ message: 'Storing msg failed' });\n\t\t\treturn;\n\t\t}\n\n\t\tclient.close();\n\n\t\tres.status(201).json({ message: 'Success', message: newMessage });\n\t}\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}